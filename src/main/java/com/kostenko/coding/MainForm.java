package com.kostenko.coding;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * Created by Alexander on 04.04.2015.
 */
public class MainForm extends JFrame {
  private JTextField textFieldOriginalCode;
  private JTextField textField4B5NResult;
  private JTextField textFieldMLT3Result;
  private JLabel labelOriginalCode;
  private JLabel label4B5BResult;
  private JLabel labelMLT3Result;
  private JPanel jPanel4B5BResultGraph;
  private JPanel jPanelMLT3ResultGraph;
  private JPanel jPanelMain;
  private JButton buttonDoConversion;
  private JTextField textFieldOriginalBinarySequence;
  private JLabel labelOriginalBinary;
  private JLabel label4B5BGraph;
  private JLabel labelMLT3Graph;

  private Encoder encoder;
  private EncoderDrawer encoderDrawer;

  {
    // GUI initializer generated by IntelliJ IDEA GUI Designer
    // >>> IMPORTANT!! <<<
    // DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  public MainForm() {
    setMinimumSize(jPanelMain.getMinimumSize());
    setContentPane(jPanelMain);
    setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    buttonDoConversion.setEnabled(false);
    setVisible(true);
    setEventHandlers();
  }

  private void setEventHandlers() {
    textFieldOriginalCode.addKeyListener(new KeyAdapter() {
      @Override
      public void keyReleased(KeyEvent e) {
        super.keyReleased(e);
        if (checkCorrectData()) {
          buttonDoConversion.setEnabled(true);
        } else {
          buttonDoConversion.setEnabled(false);
        }
      }
    });
    buttonDoConversion.addActionListener(new AbstractAction() {
      @Override
      public void actionPerformed(ActionEvent e) {
        convertData();
      }
    });

  }

  private boolean checkCorrectData() {
    String temp = textFieldOriginalCode.getText();
    Pattern pattern = Pattern.compile("((\\d+)|(\\d+\\.))+");
    Matcher matcher = pattern.matcher(temp);
    return matcher.matches();
  }

  private void convertData() {
    String[] numbersInText = textFieldOriginalCode.getText().split("\\.");
    ArrayList<Integer> listOfNumbers = new ArrayList<>();
    for (String number : numbersInText) {
      try {
        Integer byteNumber = Integer.parseInt(number);
        listOfNumbers.add(byteNumber);
      } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, ex.getMessage());
        return;
      }
    }
    doConversion(listOfNumbers);
  }

  private void doConversion(ArrayList<Integer> listOfNumbers) {
    encoder = new Encoder(listOfNumbers.toArray(new Integer[listOfNumbers.size()]));
    encoderDrawer = new EncoderDrawer(encoder);
    String res4B5B = Arrays.toString(encoder.get4Bto5BArray());
    String resMLT3 = Arrays.toString(encoder.getMLT3Array());
    textFieldOriginalBinarySequence.setText(Arrays.toString(encoder.getOriginBinarySequence()));
    textField4B5NResult.setText(res4B5B);
    textFieldMLT3Result.setText(resMLT3);
    draw4B5B();
    drawMLT3();
  }

  private void draw4B5B() {
    Graphics2D graphics2D = (Graphics2D)jPanel4B5BResultGraph.getGraphics();
    Dimension size = jPanel4B5BResultGraph.getSize();
    encoderDrawer.draw4B5B(graphics2D, size);
  }

  private void drawMLT3() {
    Graphics2D graphics2D = (Graphics2D)jPanelMLT3ResultGraph.getGraphics();
    Dimension size = jPanelMLT3ResultGraph.getSize();
    encoderDrawer.drawMLT3(graphics2D, size);
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    jPanelMain = new JPanel();
    jPanelMain.setLayout(new GridLayoutManager(13, 1, new Insets(0, 0, 0, 0), -1, -1));
    jPanelMain.setMinimumSize(new Dimension(640, 480));
    labelOriginalCode = new JLabel();
    labelOriginalCode.setHorizontalAlignment(0);
    labelOriginalCode.setHorizontalTextPosition(0);
    labelOriginalCode.setText("Original code (in decimal)");
    jPanelMain.add(labelOriginalCode,
                   new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0,
                                       false));
    textFieldOriginalCode = new JTextField();
    jPanelMain.add(textFieldOriginalCode,
                   new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null,
                                       new Dimension(150, -1), null, 0, false));
    label4B5BResult = new JLabel();
    label4B5BResult.setHorizontalAlignment(0);
    label4B5BResult.setHorizontalTextPosition(0);
    label4B5BResult.setText("4B/5B Result");
    label4B5BResult.setVerticalAlignment(0);
    jPanelMain.add(label4B5BResult,
                   new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0,
                                       false));
    textField4B5NResult = new JTextField();
    textField4B5NResult.setEditable(false);
    jPanelMain.add(textField4B5NResult,
                   new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null,
                                       new Dimension(150, -1), null, 0, false));
    labelMLT3Result = new JLabel();
    labelMLT3Result.setHorizontalAlignment(0);
    labelMLT3Result.setHorizontalTextPosition(0);
    labelMLT3Result.setText("MLT3 Result");
    jPanelMain.add(labelMLT3Result,
                   new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0,
                                       false));
    textFieldMLT3Result = new JTextField();
    textFieldMLT3Result.setEditable(false);
    jPanelMain.add(textFieldMLT3Result,
                   new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null,
                                       new Dimension(150, -1), null, 0, false));
    jPanel4B5BResultGraph = new JPanel();
    jPanel4B5BResultGraph.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    jPanelMain.add(jPanel4B5BResultGraph,
                   new GridConstraints(10, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
                                       GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
    jPanelMLT3ResultGraph = new JPanel();
    jPanelMLT3ResultGraph.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    jPanelMain.add(jPanelMLT3ResultGraph,
                   new GridConstraints(12, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
                                       GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
    buttonDoConversion = new JButton();
    buttonDoConversion.setText("Convert");
    jPanelMain.add(buttonDoConversion,
                   new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
                                       GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    labelOriginalBinary = new JLabel();
    labelOriginalBinary.setHorizontalAlignment(0);
    labelOriginalBinary.setHorizontalTextPosition(0);
    labelOriginalBinary.setText("Original binary sequence");
    jPanelMain.add(labelOriginalBinary,
                   new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0,
                                       false));
    textFieldOriginalBinarySequence = new JTextField();
    textFieldOriginalBinarySequence.setEditable(false);
    jPanelMain.add(textFieldOriginalBinarySequence,
                   new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null,
                                       new Dimension(150, -1), null, 0, false));
    label4B5BGraph = new JLabel();
    label4B5BGraph.setHorizontalAlignment(0);
    label4B5BGraph.setHorizontalTextPosition(0);
    label4B5BGraph.setText("4B5B Graph (AMI)");
    jPanelMain.add(label4B5BGraph,
                   new GridConstraints(9, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0,
                                       false));
    labelMLT3Graph = new JLabel();
    labelMLT3Graph.setHorizontalAlignment(0);
    labelMLT3Graph.setHorizontalTextPosition(0);
    labelMLT3Graph.setText("MLT3 Graph");
    jPanelMain.add(labelMLT3Graph,
                   new GridConstraints(11, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0,
                                       false));
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {
    return jPanelMain;
  }
}
